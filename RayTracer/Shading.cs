//000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000011000000000011000000000000000000000000000000000000
//000000011111100000101000110000111000011000000000001111110000000000000
//000000100001100001010000110001110000110000000000001000111100000000000
//000011000001100010100001110011010000110000000000001100001100000000000
//000011000011000111000000100010100001110000001110001100111000010000000
//000110000011001110100000100011000000100000110100001111000001111000000
//000110000000001101100111100110000101100000110001111100000010011011000
//000011000000111110111001111001111001100011111110011111001100010100000
//000011111111001100000001100001100001111110001000010001110000111000000
//000000011000000000000000000000000001111000000000010000011100111000000
//000000000000000000000000000000000000000000000000000000000001011000000
//000000000000000000000000000000000000000000000000000000000010110000000
//(c) 2004 by Riley T. Perry - Chillers of Entropy

using System;

namespace RayTracer
{
	/// <summary>
	/// Shading shell.
	/// </summary>
	public class Shading
	{
		// *---------------------------------------*
		// Shading Description
		// *---------------------------------------*

		// - Container for shading

		// *---------------------------------------*
		// Global Variables
		// *---------------------------------------*

		public bool hitObject;			// Is object hit?
		public BasicMaterial material;	// Material to shade
		public Vector3D hitPoint;		// hit point (in world coords)
		public Vector3D localHitPoint;	// hit point for textures (in world coords)
		public Vector3D normal;			// Normal for this point
		public Ray ray;					// Ray holder
		public World w;					// World holder
		public int depth;				// current reflection depth

		// *---------------------------------------*
		// Constructor
		// *---------------------------------------*

		public Shading(World w)
		{
			hitObject = false;
			this.w = w;
		}
	}
}
